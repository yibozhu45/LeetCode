array has n elements
0, 1, ... n are n + 1 elements

So array must miss one element compare to 0 to n
///////////////////////////////////////////////////
sort
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int result = 0;   
        sort(nums.begin(), nums.end());
        
        if(nums[nums.size()-1] != nums.size())
            return nums.size();
        else if(nums[0] != 0)
            return 0;
        
        //use nums.size() not nums.size() -1; because 0-n is 1 size bigger than n
        for(int i = 1; i < nums.size(); i++)
        {
            if(i != nums[i]) return i;
        }
        
        return -1;
    }
};
//////////////////////////////////////////////////
XOR:
compare 0 - n to array[i], the one does't have fit pair will be left

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int result = nums.size();
        for(int i = 0; i < nums.size(); i++)
        {
            result ^= i^nums[i]; 
        }
        return result;
    }
};