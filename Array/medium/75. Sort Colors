//after sort 0 and 2, 1 is auto sorted too
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int lo = 0, hi = nums.size() -1;
        if(lo == hi) return;
        int i = 0;
        while(lo <= hi)
        {
            if(nums[lo] == 2)
            {
                swap(nums[lo], nums[hi]);
                hi--;
            }
            else if(nums[lo] == 0)
            {
                swap(nums[lo], nums[i]);
                lo++;
                i++;
            }
            else
            {
                lo++;
            }
        }
    }
};

class Solution {
  public:
  /*
  Dutch National Flag problem solution.
  */
  void sortColors(vector<int>& nums) {
    // for all idx < p0 : nums[idx < p0] = 0
    // curr is an index of element under consideration
    int p0 = 0, curr = 0;
    // for all idx > p2 : nums[idx > p2] = 2
    int p2 = nums.size() - 1;

    while (curr <= p2) {
      if (nums[curr] == 0) {
        swap(nums[curr++], nums[p0++]);
      }
      else if (nums[curr] == 2) {
        swap(nums[curr], nums[p2--]);
      }
      else curr++;
    }
  }
};
..........................................................
