for SparseVector& vec
vec.mp is the map

class SparseVector {
public:
    map<int, int> mp;
    SparseVector(vector<int> &nums) {
        for(int i = 0; i < nums.size(); i++)
        {
            if(nums[i])
            {
                mp[i] = nums[i];
            }
        }
    }
    
    // Return the dotProduct of two sparse vectors
    int dotProduct(SparseVector& vec) {
        int sum = 0;
        for(auto it_vec : vec.mp)
        {
            sum += mp[it_vec.first] * it_vec.second;
        }
        return sum;
    }
};

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1(nums1);
// SparseVector v2(nums2);
// int ans = v1.dotProduct(v2);
