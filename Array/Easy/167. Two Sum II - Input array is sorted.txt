O(n^2)

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        vector<int> result(2, 0);
        for(int i = 0; i < numbers.size(); i++)
        {
            int num = target - numbers[i];
            
            for(int j = i + 1; j < numbers.size(); j++)
            {
                if(num == numbers[j])
                {
                    result[0] = i + 1;
                    result[1] = j + 1;
                    return result;
                }
            }
        }
        return result;
    }
};

////////////////////////////////////////////////////////////////////
Two pointer, i begin from the minimum, j begin from the maximun,
if sum is bigger than target j--, if sum is smaller than target i++

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        vector<int> result(2, 0);
        int i = 0; int j = numbers.size() -1;
        
        while(numbers[i] + numbers[j] != target)
        {
            if(numbers[i] + numbers[j] > target)
            {
                j--;
            }
            else if(numbers[i] + numbers[j] < target)
            {
                i++;
            }
        }
        result[0] = i + 1;
        result[1] = j + 1;
        return result;
    }
};