oop needs to initiate object
vector1 = vector2; works
/////////////////////////////////
#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target)
    {
        vector<int> result;
        for(int i = 0; i < nums.size(); i++)
        {
            for (int x = i + 1; x < nums.size(); x ++)
            {
                if(target - nums[i] == nums[x])
                    result = {i, x};
            }
        }
        return result;
    }
};


int main()
{
    vector<int> vect = {2,7,11,15};
    int target = 26;
    
    Solution solution;
    vector<int> result = solution.twoSum(vect, target);
    
    for(int i = 0; i < result.size(); i++)
    {
        cout << result[i] << " ";
    }
    
}
//////////////////////////////////////
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target)
    {
        int indice1, indice2;
        vector<int> result;
        for(int i = 0; i < nums.size(); i++)
        {
            int s = target - nums[i];
            for (int x = i + 1; x < nums.size(); x ++)
            {
                if(s == nums[x])
                {
                    indice1 = i;
                    indice2 = x;
                }
                result = {indice1, indice2};
            }
        }
        return result;
    }
};
/////////////////////////////////////
Hash table, using map

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int, int> mymap;
        vector<int> result;
        for (int i = 0; i < nums.size(); i++)
        {
            mymap.emplace(nums.at(i), i);
        }
        
        for (int i = 0; i < nums.size(); i++)
        {
            auto mit = mymap.find(target - nums.at(i));
            if(mit != mymap.end() && i != mit -> second)//can't use (.), need to use (->)
            {
                result.push_back(i);
                result.push_back(mit->second);
                break;
            }
        }
        return result;

    }
};
