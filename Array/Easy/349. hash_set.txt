class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        unordered_set<int> hashset;
        vector<int> result;
        
        for(int i = 0; i < nums1.size(); i++)
        {
            hashset.insert(nums1[i]);
        }
        
        for(auto it = hashset.begin(); it != hashset.end(); ++it)
        {
            for(int i = 0; i < nums2.size(); i++)
            {
                if(*it == nums2[i])
                {
                    result.push_back(nums2[i]); 
                    break;
                }
            }
        }
        
        return result;
    }
};
/////////////////////////////////////////////////////////////////////////
Two set:

class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        unordered_set<int> hashset1;
        unordered_set<int> hashset2;
        vector<int> result;
        
        for(int i = 0; i < nums1.size(); i++)
        {
            hashset1.insert(nums1[i]);
        }
        
        for(int i = 0; i < nums2.size(); i++)
        {
            hashset2.insert(nums2[i]);
        }
        
        for(auto it : hashset1)
        {
            if(hashset2.find(it) != hashset2.end())
            {
                result.push_back(it);
            }
        }
        
        return result;
    }
};
////////////////////////////////////////////////////////////////////////////

class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        unordered_set<int> s,res;
        for(auto &i : nums1)
            s.insert(i);
        for(auto &i : nums2)
        {
            if(s.count(i))
                res.insert(i);
        }
        return vector<int>(res.begin(),res.end());
    }
};
///////////////////////////////////////////////////////////////////////////
class Solution {
public:
    vector<int> intersection(vector<int>& v1, vector<int>& v2) {
        vector<int> ans;
        unordered_set<int> s1(v1.begin(), v1.end());        
        for(int x : v2){
            if(s1.count(x)){
                ans.push_back(x);
                s1.erase(x);
            }
        }
        return ans;
    }
};