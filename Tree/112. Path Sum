/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool flag = false;
    int S;
    void helper(TreeNode* root, int i)
    {
        if(root != NULL)
        {
            i += root -> val;
            helper(root -> left, i);
            helper(root -> right, i);
            
            if(root -> right == NULL && root -> left == NULL)
            {
            if(i == S)
            {
                flag = true;
            }            
            }
        }
    }
    
    bool hasPathSum(TreeNode* root, int sum) {
        S = sum;
        int i = 0;
        helper(root, i);
        
        return flag;
    }
};
..........................................................................
class Solution {
public:
    bool hasPathSum(TreeNode* root, int sum) {
        
        if(root==nullptr)
            return false;
        if(root->left==nullptr && root->right==nullptr && root->val== sum)
            return true;
        bool resultl = hasPathSum(root->left, sum - root->val);
        bool resultr = hasPathSum(root->right, sum - root->val);
       
    return resultl||resultr;//filter the results
        
    }
};
