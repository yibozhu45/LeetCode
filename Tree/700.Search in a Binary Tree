Consider using global variable

class Solution {
public: 
    TreeNode* res = NULL;
    void helper(TreeNode* root, int val)
    {
        if(root != NULL)
        {
        if(root -> val == val)
            res = root;
            
        helper(root -> right, val);
        helper(root -> left, val);
        }
    }
    
    TreeNode* searchBST(TreeNode* root, int val) {
        if(root == NULL)
            return root;
        helper(root, val);
        return res;
    }
};
.....................................................
use binary tree value

class Solution {
public: 
    TreeNode* searchBST(TreeNode* root, int val) {
        if(root == NULL || root->val == val)
            return root;

        return val < root -> val? searchBST(root -> left, val) : searchBST(root -> right, val);
        
    }
};

class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        if(root == NULL) return NULL;
        
        if(val > root -> val)
            return searchBST(root -> right, val);
        else if(val < root-> val) 
            return searchBST(root -> left, val);
        else
            return root;
    }
};
