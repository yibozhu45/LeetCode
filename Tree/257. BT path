pass by parameter, everyone is independed
use global, value will influence each other

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root,string path, vector<string>& paths)
    {
        if(root != NULL)
        {
            path += to_string(root -> val);
            if(root -> right == NULL && root -> left == NULL)
            {
                paths.push_back(path);
            }
            else
            {
                path += "->";
                helper(root -> right, path, paths);
                helper(root -> left, path, paths);
            }
        }
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> paths;
        helper(root,"",paths);
        return paths;
    }
};
