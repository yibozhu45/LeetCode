Idea: switch to vector problem then do it

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* cur = new ListNode(0);
        cur -> next = head;
        head = cur;
        
        vector<int> v;
        while(cur!= NULL)
        {
            v.push_back(cur -> val);
            cur = cur -> next;
        }
        
        v.erase(v.end() - n);
        cur = new ListNode(v[0]);
        head = cur;
        for(int i = 1; i < v.size(); i++)
        {
            cur -> next = new ListNode(v[i]);
            cur = cur -> next;
        }
        
        return head -> next;
    }
};
...........................................................
idea: two pointer

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* cur = new ListNode(0);
        cur -> next = head;
        head = cur;
        ListNode* first = head;
        
        for(int i = 0; i <= n; i++)
        {
            first = first -> next;
        }
        
        while(first != NULL)
        {    
            first = first -> next;
            cur = cur -> next;
        }
        
        cur -> next = cur -> next -> next;
        return head -> next;
    }
};
