If head == NULL, will trigger many errors, add one element to the head will perfectly ignore it. 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        ListNode* cur = new ListNode(val - 1);
        cur -> next = head;
        head = cur;
        
        while(cur -> next != NULL)
        {
            if(cur -> next -> val == val)
            {
                cur -> next = cur -> next -> next;
            }
            else
            {
                cur = cur -> next;
            }
            if(cur == NULL)
                break;
        }
        return head -> next;
    }
};
